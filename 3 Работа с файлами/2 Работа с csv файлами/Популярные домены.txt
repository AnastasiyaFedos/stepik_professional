''' 
Задание: 
Вам доступен файл data.csv, который содержит неповторяющиеся данные о пользователях некоторого ресурса. 
В первом столбце записано имя пользователя, во втором — фамилия, в третьем — адрес электронной почты:

first_name,surname,email
John,Wilson,johnwilson@outlook.com
Mary,Wilson,marywilson@list.ru
...
Напишите программу, которая создает файл domain_usage.csv, имеющий следующее содержание:

domain,count
rambler.ru,24
iCloud.com,29
...
где в первом столбце записано название почтового домена, а во втором — количество пользователей, использующих данный домен. 
Домены в файле должны быть расположены в порядке возрастания количества их использований, при совпадении количества использований — в лексикографическом порядке.

Примечание 1. Разделителем в файле data.csv является запятая, при этом кавычки не используются.
Примечание 2. Указанный файл доступен по ссылке. Ответ на задачу доступен по ссылке.
Примечание 3. Начальная часть файла domain_usage.csv выглядит так:

domain,count
rambler.ru,24
iCloud.com,29
...
Примечание 4. При открытии файла используйте явное указание кодировки UTF-8.

От: 27 октября 2023 г. в 16:10
'''

import csv


def csv_columns(filename):
  with open(filename, 'r') as csv_file:
    reader = csv.reader(csv_file)
    header = next(reader)
    rows = list(reader)
    dict = {}

    for i in range(len(header)):
      row = []
      for j in range(len(rows)):
        row.append(rows[j][i])

      dict[header[i]] = row
    return dict


with open('data.csv','r', encoding='utf-8') as csv_file, open('domain_usage.csv', 'w', encoding='utf-8') as output_file:
  data = csv_columns('data.csv')
  dict_email = {}
  for key in data['email']:
    name, email = key.split('@')
    dict_email[email] = dict_email.get(email, 0) + 1

  print(f'domain,count', file=output_file)
  for email, num in sorted(dict_email.items(), key= lambda x: (x[1], x[0])):
    print(f'{email},{num}', file=output_file)






































