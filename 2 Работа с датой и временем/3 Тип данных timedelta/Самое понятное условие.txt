''' 
Задание: 
Даны две даты — левая и правая границы диапазона соответственно. Напишите программу, которая из этого диапазона, включая границы, выводит, начиная с даты, у которой сумма дня и месяца нечетная, каждую третью дату, только если она не понедельник и не четверг.

Формат входных данных
На вход программе подаются две даты в формате DD.MM.YYYY — левая и правая границы диапазона соответственно, каждая на отдельной строке. 
Гарантируется, что первая дата не больше второй.

Формат выходных данных
Программа должна из указанного диапазона, включая концы, вывести, начиная с даты, у которой сумма дня и месяца нечетная, каждую третью дату, только если она не понедельник и не четверг. 
Даты должны быть расположены каждая на отдельной строке, в формате DD.MM.YYYY.

Примечание 1. Если дат, удовлетворяющих условию, нет, программа ничего не должна выводить.
Примечание 2. Рассмотрим второй тест. 
Левая граница диапазона 07.03.2021 не является начальной датой, так как имеет четную сумму дня и месяца, поэтому в качестве начальной берем следующую дату 08.03.2021. 
Дата 08.03.2021 не выводится, так как является понедельником, поэтому двигаемся к следующей дате с шагом три: 11.03.2021. 
Дата 11.03.2021 не выводится, так как является четвергом.

От: 16 октября 2023 г. в 16:22
'''

from datetime import timedelta, datetime 

date_one = datetime.strptime(input(), '%d.%m.%Y')
date_two = datetime.strptime(input(), '%d.%m.%Y')

correct_date = ''
compared_date = date_one

if (compared_date == date_two and (compared_date.day + compared_date.month) % 2 != 0
       and compared_date.weekday() != 0 and compared_date.weekday() != 3):
    print(compared_date.strftime('%d.%m.%Y'))
else:
    while correct_date == '' and compared_date != date_two:
        if (compared_date.day + compared_date.month) % 2 != 0:
            correct_date = compared_date
            for i in range(1, (date_two - correct_date).days + 2, 3):
                if correct_date.weekday() != 0 and correct_date.weekday() != 3:
                    print(correct_date.strftime('%d.%m.%Y'))
        
                correct_date += timedelta(days=3)
        else:
            compared_date += timedelta(days=1)











































